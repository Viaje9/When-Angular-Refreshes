import{aB as m,o as e,c,k as d,e as t,ad as o,b as i,q as u,s as x,B as a}from"./modules/vue-DfT0uuOf.js";import{_}from"./slidev/default-Bxq3ImTM.js";import{u as b,f as p}from"./slidev/context-BX1VwLt7.js";import"./index-ChqLPTzv.js";import"./modules/shiki-CLAH7ZJG.js";const v={class:"ml-8 mt-5"},f={class:"mb-10"},g={class:"mb-3"},D={class:"mt-3"},k={class:"mb-3"},C={class:"mt-3"},P={class:"mb-3"},$={class:"mt-3"},S={__name:"slides.md__slidev_15",setup(h){const{$slidev:B,$nav:O,$clicksContext:n,$clicks:y,$page:w,$renderContext:I,$frontmatter:r}=b();return n.setup(),(N,s)=>{const l=m("click");return e(),c(_,u(x(a(p)(a(r),14))),{default:d(()=>[s[6]||(s[6]=t("h1",null,"更新過程的幾個問題",-1)),t("div",v,[t("div",f,[t("ul",null,[t("li",g,[s[1]||(s[1]=t("span",{class:"text-lg text-bold text-lime-800"},"紫色的 Dirty 做什麼用的，為什麼需要冒泡反應？",-1)),o((e(),i("ol",D,s[0]||(s[0]=[t("li",{class:"mb-3 text-base"}," Dirty 僅在 OnPush 有用，當元件為 OnPush 且被標記為 Dirty 才會觸發 Change Detection。 ",-1),t("li",{class:"mb-3 text-base"}," OnPush 僅被標記 Dirty 才會進行檢查，如果父元件沒被標記，那麼點擊觸的那個元件不會被檢查到，所以才需要冒泡反應。 ",-1)]))),[[l]])]),t("li",k,[s[3]||(s[3]=t("span",{class:"text-lg text-bold text-lime-800"},"如果使用 setInterval 是不是會一直觸發 Change Detection？",-1)),o((e(),i("ol",C,s[2]||(s[2]=[t("li",{class:"mb-3 text-base"}," 沒錯使用 setInterval 他就會一直觸發 Change Detection ，所以可以透過 OnPush 或是 NgZone.runOutsideAngular 避免。 ",-1)]))),[[l]])]),t("li",P,[s[5]||(s[5]=t("span",{class:"text-lg text-bold text-lime-800"},"為什麼 Change Detection 要檢查整個元件樹，不能檢查點擊觸發的元件就好嗎？",-1)),o((e(),i("ol",$,s[4]||(s[4]=[t("li",{class:"mb-3 text-base"}," 因為有些事件並不是透過點擊，所以無法得知是哪個元件的變數有異動，所以直接檢查整個元件樹。 ",-1),t("li",{class:"mb-3 text-base"}," 或是使用 OnPush 策略，可以檢查跳過某些元件節點不檢查。 ",-1)]))),[[l]])])])])])]),_:1},16)}}};export{S as default};
